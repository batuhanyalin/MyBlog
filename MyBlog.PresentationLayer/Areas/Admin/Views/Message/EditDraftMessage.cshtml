@model Message
@{
    ViewData["Title"] = "EditDraftMessage";
    Layout = "~/Areas/Admin/Views/AdminLayout/Index.cshtml";
}


<div class="container">
    <form id="messageForm" asp-action="CreateMessage" asp-controller="Message" asp-area="Admin" method="post">
        <br />
        <h4 class="mb-4">Taslak Mesaj Sayfası</h4>
        <div class="row">
            <div class="col-sm-12 col-xl-12">
                <div class="bg-light rounded h-100 p-4">
                    <div class="mb-3">
                        <input type="hidden" asp-for="IsRead" value="false" />
                        <input type="hidden" asp-for="IsJunk" value="false" />
                        <input type="hidden" asp-for="IsImportant" value="false" />
                        <input type="hidden" id="isDraftInput" asp-for="IsDraft" />
                        <label class="form-label">Alıcı: </label>
                        @Html.DropDownListFor(x => x.ReceiverId, (List<SelectListItem>)ViewBag.author, new { @class = "form-control" })
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mesaj Başlığı</label>
                        <input type="text" class="form-control" asp-for="Subject">
                    </div>
                    <div class="row">
                        <h4 class="mb-4">Mesaj</h4>
                        <div>
                            <textarea class="form-control" asp-for="Text" id="summernote"></textarea>
                        </div>
                    </div>
                    <button class="btn btn-success" type="submit" onclick="setDraftStatus(false)">Mesajı Gönder</button>
                    <button type="submit" class="btn btn-outline-info" onclick="setDraftStatus(true)">Taslak Olarak Kaydet</button>
                </div>
            </div>
        </div>
    </form>
</div>
<script>
    $('#summernote').summernote({
        height: 200,                 // set editor height
        minHeight: null,             // set minimum height of editor
        maxHeight: null,             // set maximum height of editor
        focus: true                  // set focus to editable area after initializing summernote
    });

    function setDraftStatus(isDraft) {
        document.getElementById('isDraftInput').value = isDraft;
    }
</script>
